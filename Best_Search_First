from Queue import PriorityQueue

transitions = {
	'a': 'c',
	'ba': 'b',
	'bb': 'c',
	'c': 'b'
}	


source = 'ababb'
destination = 'bcb'

def heuristic(string):
	return abs(len(string) - len(destination))

solution = None
worklist = PriorityQueue()
worklist.put((0 + heurisitc(source), [source]))
closed = set()
while not worklist.empty():
	estimate, path = worklist.get(False)
	end = path[-1]
	if end not in closed:
		closed |= {end}
		for extension in transitions(end):
			worklist.put(heurisitc(source), path + [extension])
	if end == destination:
		solution = path
		break
print('Found a way to rewrite {source} to get {destination}:\n  {solution}'.format(source = repr(source), destination = repr(destination), solution = solution))
